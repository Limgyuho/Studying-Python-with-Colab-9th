# -*- coding: utf-8 -*-
"""파이썬 기본공부9

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XF_sFGgfZRH40xZxYCgVrCiEMo_1P7L7
"""

# 클래스 속성

class Person:
  folder = [] # 클래스속성 -> 클래스에 속한다. 모든 인스턴스에서 접근이 가능하다.
  
  def add_file(self, file):
    Person.folder.append(file) # 클래스 이름으로 클래스 속성에 접근할 수 있다. 관례긴 하지만 왠만하면 지키는게 좋다.

jin = Person()
jin.add_file("txt")

paul = Person()
paul.add_file("img")

print(jin.folder)
print(paul.folder)

# 인스턴스 속성

class Person:
  def __init__(self):
    self.folder = [] # 인스턴스 속성 -> 함수(메서드)에 속한다.
  
  def add_file(self, file):
    self.folder.append(file) # self로 인스턴스 속성에 접근할 수 있다.

jin = Person()
jin.add_file("txt")

paul = Person()
paul.add_file("img")

print(jin.folder)
print(paul.folder)

# 인스턴스 메서드
class Person:
  def hi(self): # 인스턴스 메서드
    print("hi")

jin = Person()

jin.hi() # 클래스 인스턴스(jin)를 사용해서 메서드 호출(실행)

# 정적 메서드 -> 첫번째 매개변수로 self가 필요없다
class Calc:

  @staticmethod # 스태틱 메서드
  def add(a, b):
    print(a + b)

  @staticmethod
  def mul(a, b):
    print(a * b) 

# test = Calc()
# test.add(10, 20)
# test.mul(10, 20)

Calc.add(10, 20) # 클래스에서 바로 메서드 호출(실행)이 가능하다
Calc.mul(10, 20)

# 클래스 메서드
class Person:
  count = 0 # 클래스 속성

  def __init__(self):
    Person.count += 1

  @classmethod
  def print_count(cls): # 클래스 메서드는 self대신 cls
    print("사람이 총 {} 명 있습니다.".format(cls.count)) # cls 로 클래스 속성에 접근한다.

Person.print_count()

jin = Person()
jin.print_count()
Person.print_count()
paul = Person()
Person.print_count()

